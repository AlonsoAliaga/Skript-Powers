on load:
    log info "[&6Skript-Powers&r] Loading Skript-Powers..."
    #Credits
    log info "[&6Skript-Powers&r]"
    log info "[&6Skript-Powers&r] Created by ImNotStable"
    log info "[&6Skript-Powers&r] Version 1.0.1"
    log info "[&6Skript-Powers&r]"
    #Configuration Files
    if file "plugins/Skript-Powers/core.yml" doesn't exist:
        log warning "[Skript-Powers] Configuration file was empty, rebuilding file."
        create file "plugins/Skript-Powers/core.yml"
        set yaml value "version" of file "plugins/Skript-Powers/core.yml" to "1.0.1"
        set yaml value "debug" of file "plugins/Skript-Powers/core.yml" to false
    #Version Checker
    if yaml value "version" of file "plugins/Skript-Powers/core.yml" isn't "1.0.1":
        log warning "[Skript-Powers] core.yml was outdated, rebuilding file"
        delete file "plugins/Skript-Powers/core.yml"
        create file "plugins/Skript-Powers/core.yml"
        set yaml value "version" of file "plugins/Skript-Powers/core.yml" to "1.0.1"
        set yaml value "debug" of file "plugins/Skript-Powers/core.yml" to false
    #Default Powers
    if directory "plugins/Skript/scripts/skript-powers/" doesn't exist:
        debug(warning, "Script folder didn't exist, rebuilding file.")
        create directory "plugins/Skript/scripts/skript-powers/"
        if directory "plugins/Skript/scripts/skript-powers/" exists:
            debug(info, "Successfully created folder")
            set {_list::*} to contents from url "https://raw.githubusercontent.com/ImNotStable/Skript-Powers/main/skript-powers/power%%20list"
            loop {_list::*}:
                download file from "https://github.com/ImNotStable/Skript-Powers/raw/main/skript-powers/%loop-value%" to file "plugins/Skript/scripts/skript-powers/%loop-value%"
                debug(info, "Downloading the default power %loop-value%")
        else:
            debug(an error, "Couldn't create folder, please create this folder manually (plugins/Skript/scripts/skript-powers/)")
    log info "[&6Skript-Powers&r] Loaded Skript-Powers"
    #Power Configuration Creator
    if directory "plugins/Skript/scripts/skript-powers/" exists:
        loop files in directory "plugins/Skript/scripts/skript-powers":
            set {_split::*} to split loop-value at "\powers-"
            replace ".sk" with "" in {_split::2}
            if yaml path "Powers.%{_split::2}%" in file "plugins/Skript-Powers/core.yml" doesn't exist:
                set yaml value "Powers.%{_split::2}%" of file "plugins/Skript-Powers/core.yml" to "null"
            else:
                set {powers::%{_split::2}%} to yaml value "Powers.%{_split::2}%" of file "plugins/Skript-Powers/core.yml"
    #Power Reloader
    loop files in directory "plugins/Skript/scripts/skript-powers":
        set {_split::*} to split loop-value at "\powers-"
        if first character of {_split::2} isn't "-":
            replace ".sk" with "" in {_split::2}
            reload script "skript-powers/powers-%{_split::2}%.sk"
            if script "skript-powers/powers-%{_split::2}%.sk" is loaded:
                debug(info, "Loaded powers-%{_split::2}%.sk")
            else:
                debug(an error, "powers-%{_split::2}%.sk wasn't loaded")

on unload:
    delete {powers::*}

command /skript-powers:
    permission: skript-powers.*
    trigger:
        open hopper inventory named "&6Skript-Powers Configuration" to player
        set slot 0 and 4 of player's current inventory to orange stained glass pane named "&6"
        if yaml value "debug" from file "plugins/Skript-Powers/core.yml" is true:
            set slot 1 of player's current inventory to writable book named "&6Debug Mode: &aTrue"
        else:
            set slot 1 of player's current inventory to book named "&6Debug Mode: &cFalse"
        set slot 2 of player's current inventory to totem of undying named "&6Edit Player/Power Configuration"
        loop yaml nodes "Powers." of file "plugins/Skript-Powers/core.yml":
            set {_} to yaml value "Powers.%loop-value%" of file "plugins/Skript-Powers/core.yml"
            if {_} isn't "null":
                if length of {_} is 32 or 36:
                    set {_player} to line 3 from url "https://sessionserver.mojang.com/session/minecraft/profile/%{_}%"
                    replace all "  ""name"" : """ and """," with "" in {_player}
                    set {_player} to {_player} parsed as offlineplayer
                if {_player} is set:
                    add "&6%loop-value%: &e%{_player}%" to {_powers.player::*}
                    delete {_player}
                else:
                    add "&4%loop-value%: &cinvalid uuid" to {_powers.player::*}
            else:
                add "&4%loop-value%: &cnull" to {_powers.player::*}
        set lore of slot 2 of player's current inventory to {_powers.player::*}
        set slot 3 of player's current inventory to furnace named "&6Reload Script"

on inventory click:
    player has permission "skript-powers.*"
    if name of player's current inventory is "&6Skript-Powers Configuration":
        cancel event
        if event-slot is 1:
            if yaml value "debug" from file "plugins/Skript-Powers/core.yml" is true:
                set yaml value "debug" from file "plugins/Skript-Powers/core.yml" to false
                set slot 1 of player's current inventory to book named "&6Debug Mode: &cFalse"
            else:
                set yaml value "debug" from file "plugins/Skript-Powers/core.yml" to true
                set slot 1 of player's current inventory to writable book named "&6Debug Mode: &aTrue"
        else if event-slot is 2:
            set {_i} to number of yaml nodes "Powers." of file "plugins/Skript-Powers/core.yml"
            open chest inventory with ceiling({_i}/9) rows named "&6Edit Player/Power Configuration" to player
            set {_rows} to (ceiling({_i}/9) * 9) - 1
            set {_i} to 0
            loop yaml nodes "Powers." of file "plugins/Skript-Powers/core.yml":
                set {_} to yaml value "Powers.%loop-value%" of file "plugins/Skript-Powers/core.yml"
                if {_} isn't "null":
                    if length of {_} is 32 or 36:
                        set {_player} to line 3 from url "https://sessionserver.mojang.com/session/minecraft/profile/%{_}%"
                        replace all "  ""name"" : """ and """," with "" in {_player}
                        set {_player} to {_player} parsed as offlineplayer
                    if {_player} is set:
                        set slot {_i} of player's current inventory to {_player}'s skull named "&6%loop-value%: &e%{_player}%"
                        delete {_player}
                    else:
                        set slot {_i} of player's current inventory to barrier named "&4%loop-value%: &cinvalid uuid"
                else:
                    set slot {_i} of player's current inventory to wither skeleton skull named "&4%loop-value%: &cnull"
                add 1 to {_i}
            loop integers from {_i} to {_rows}:
                set slot loop-integer of player's current inventory to skeleton skull named "&8This power isn't set"
        else if event-slot is 3:
            reload script script's name
    else if name of player's current inventory is "&6Edit Player/Power Configuration":
        cancel event
        if event-slot isn't skeleton skull:
            set {_selected.power} to uncolored event-item's name
            set {_split::*} to split {_selected.power} at ": "
            open hopper inventory named "&6Select a way to choose a player" to player
            set slot 0 of player's current inventory to book named "&eOnline Players" with nbt "{power: %{_split::1}%}"
            set slot 2 of player's current inventory to paper named "&eManually Type Player's Username" with nbt "{power: %{_split::1}%}"
            set slot 4 of player's current inventory to barrier named "&cClear Power Data" with nbt "{power: %{_split::1}%}"
    else if name of player's current inventory is "&6Select a way to choose a player":
        cancel event
        set {_power} to "%tag "power" of nbt of event-slot%"
        if event-slot is 0:
            set {_i} to number of all players
            open chest inventory with ceiling({_i}/9) rows named "&6Select a Player" to player
            set {_rows} to (ceiling({_i}/9) * 9) - 1
            set {_i} to 0
            loop all players:
                set slot {_i} of player's current inventory to loop-player's skull named "&e%loop-player% &e(&6%loop-player's uuid%&e)" with nbt "{power: %{_power}%}"
                add 1 to {_i}
            loop integers from {_i} to {_rows}:
                set slot loop-integer of player's current inventory to skeleton skull named "&8Not a Player"
        else if event-slot is 2:
            open sign to player with lines "", "^^^^^^^^", "Enter a Player", "":
                set {_player} to line 1 from url "https://api.mojang.com/users/profiles/minecraft/%1st element out of lines%"
                if {_player} is set:
                    set yaml value "Powers.%{_power}%" from file "plugins/Skript-Powers/core.yml" to content of json value "id" from text {_player}
                    set {powers::%{_power}%} to convertUUID((content of json value "id" from text {_player} parsed as offlineplayer)'s uuid)
                    if yaml value "Powers.%{_power}%" from file "plugins/Skript-Powers/core.yml" is content of json value "id" from text {_player}:
                        debug(info, "Successfully set the power %{_power}% to %content of json value "id" from text {_player}%")
                    else:
                        debug(an error, "An error occured while attempting to set the power %{_power}% to %content of json value "id" from text {_player}%")  
                else:
                    debug(an error, "Invalid player input (%1st element out of lines%)")
        else if event-slot is 4:
            close player's inventory
            delete {powers::%{_power}%}
            set yaml value "Powers.%{_power}%" from file "plugins/Skript-Powers/core.yml" to "null"
            if yaml value "Powers.%{_power}%" from file "plugins/Skript-Powers/core.yml" is "null":
                debug(info, "Successfully cleared data of the power %{_power}%")
            else:
                debug(an error, "An error occured while attempting to clear data of the power %{_power}%")
    else if name of player's current inventory is "&6Select a Player":
        cancel event
        if event-slot isn't skeleton skull:
            set {_power} to "%tag "power" of nbt of event-slot%"
            set {_split::*} to split uncolored event-slot's name at " ("
            set {_split::2} to convertUUID({_split::2})
            set yaml value "Powers.%{_power}%" of file "plugins/Skript-Powers/core.yml" to {_split::2}
            close player's inventory
            if yaml value "Powers.%{_power}%" of file "plugins/Skript-Powers/core.yml" is {_split::2}:
                debug(info, "Successfully set the power %{_power}% to %{_split::1}%")
                set {powers::%{_power}%} to {_split::2}
            else:
                debug(an error, "An error occured while attempting to set the power %{_power}% to %{_split::1}%")

function debug(level: log level, message: string):
    if yaml value "debug" of file "plugins/Skript-Powers/core.yml" is true:
        if {_level} is info:
            log {_level} "[&6Skript-Powers&r] &a%{_message}%"
        else:
            log {_level} "[Skript-Powers] %{_message}%"

function convertUUID(uuid: string) :: string:
    replace all "-" with "" in {_uuid}
    return {_uuid}